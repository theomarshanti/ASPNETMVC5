@model IEnumerable<Vidly.Models.Customer>
@{
    ViewBag.Title = "Customer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

@*
    Now that we're no longer using model to pass in info, this is redundant:
    @if (!Model.Any())
{
    <p> We don't have any customers yet</p>
} else
{
    *@
<table id="customers" class = "table table-bordered table-hover">
    <thead>
        <tr>
            <th>Customer</th>
            <th>Membership Type</th>
            <th>Delete</th>
        </tr>
    </thead>
    <tbody>
        @*foreach (var customer in Model)
        {
            <tr>
                <td>@Html.ActionLink(customer.Name, "Edit", "Customer", new { id=customer.Id }, null)</td>
                <td>@customer.MembershipType.Name</td>
                <td><button data-customer-id="@customer.Id" class="btn-link js-delete">Delete</button></td>
            </tr>
        }*@
    </tbody>
</table>

@section scripts {
    <script>
        $(document).ready(function () {
            var table = $("#customers").DataTable({
                //We are passing in this parameter to have our DataTable communicate directly with our API to request data
                // rather than having to sift through the Markdown sent
                ajax: {
                    url: "/api/customers",
                    dataSrc:"" //specifies where within the response we get we can find the data. In our case, since the entire response is our data, we leave it blank. Otherwise we could've put in a key
                },
                columns: [
                    {
                        data: "name", //where in our response we finnd this col's data
                        render: function (data, type, customer) {
                            return "<a href='/customers/edit/" + customer.id + "'>" + data  + "</a>"
                        }
                    },
                    {
                        data: "membershipType.name",
                    },
                    {
                        data: "id",
                        render: function (data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + ">Delete</button>"
                        }
                    }
                ]
            });

            //We switched from 
            // `$("#customers .js-delete").on("click", function () {`
            //to the below. This is because the below only uses 1 listener
            // while the above uses 1 listener for every .js-delete file!
            //The 2nd parameter to `on` ".js-delete" filters all of the clicks
            // to when they actually occur on an object with class js-delete
            $("#customers").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this customer?", function (result) {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {
                                table.row(button.parents("tr")).remove().draw();
                                console.log("Mabrouk basha");
                            }
                        });
                    }
                });
            });
        });
    </script>    
}

