@model Vidly.Models.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "Customer Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>

@*When done running, it will call CustomerController/Create*@
@using (Html.BeginForm("Save", "Customer"))
{
    @Html.ValidationSummary(true, "Please fix the following errors")
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @*We will look at the value for Name and make that the label for our HTML element *@
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Name)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership Type", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId);
        @* 1st arg is the elt the DropDownList is selecting; 2nd arg is list of items for dropdown list - done with help of SelectList which helps initialize dropdown list.
            The 1st arg to its constructor is the items of the dropdown list. The 2nd is where, in the 1st parameter of the constructor, what we want to select it, and the 3rd
            param of the constructor is where the text we want to display is. After that, our 3rd parameter is the Placeholder Text. And the 4th is any attributes we want to
            add in. *@
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Birthdate)
        @*We will look at the value for Name and make that the label for our HTML element *@
        @Html.TextBoxFor(m => m.Customer.Birthdate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Birthdate)
    </div>
    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Subscribed to NewsLetter?
        </label>
    </div>

    @Html.HiddenFor(m => m.Customer.Id)
    <button type="submit" class="btn btn-primary">Save</button>


}

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}

@*That specifies the action we want to call when we post this form.
    CustomerControler -> Create*@
@*Html.BeginForm renders the opening closing tag. But we need the closing tag also.
    How do we get that? By adding `Using`! That leads to automatic disposal upon
    completion.*@
